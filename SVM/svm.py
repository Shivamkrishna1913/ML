# -*- coding: utf-8 -*-
"""SVM

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yLM7uIwIxde8DwJVdHHgRxeEbAVw7T3X
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('WineQT.csv')

df.isnull().sum()

X = df.drop('quality',axis=1)
y=df['quality']

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=44)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

"""# **Data Modeling with SVC**"""

from sklearn.svm import SVC
svc = SVC()
svc.fit(X_train,y_train)
predictions = svc.predict(X_test)

from sklearn.metrics import accuracy_score
accuracy_score(y_test,predictions)

"""# **Hyperparameter Tuning**"""

param_grid = {
    'C':[0.1,1,10],
    'kernel':['linear','rbf','poly'],
    'gamma':['scale','auto'],
    'degree':[2,3,4]
}

#GridSearchCV
from sklearn.model_selection import GridSearchCV
grid = GridSearchCV(svc,param_grid,cv=5)
grid.fit(X_train,y_train)

grid.best_params_

#RandomizedSearchCV
from sklearn.model_selection import RandomizedSearchCV
random = RandomizedSearchCV(svc,param_grid,cv=5)
random.fit(X_train,y_train)

random.best_params_

svc_final = SVC(C=1,gamma='scale',kernel='rbf',degree=4)
svc_final.fit(X_train,y_train)

predictions = svc_final.predict(X_test)

score = svc_final.score(X_test,y_test)

print(score)

from sklearn.metrics import classification_report,accuracy_score,confusion_matrix
print(classification_report(y_test,predictions))
print(confusion_matrix(y_test,predictions))
print(accuracy_score(y_test,predictions))





